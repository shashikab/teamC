type: api
version: v4.5.0
data:
  id: c8d9925f-ad3a-4ca4-90a9-944bb0af1b34
  name: PizzaShackAPI
  description: This is a simple API for Pizza Shack online pizza delivery store.
  context: /pizzashack
  version: 1.0.0
  provider: admin
  lifeCycleStatus: PUBLISHED
  responseCachingEnabled: false
  cacheTimeout: 300
  hasThumbnail: false
  isDefaultVersion: false
  isRevision: true
  revisionedApiId: 52d56f19-02b9-4d9c-8dc8-8ea26555f4c0
  revisionId: 2
  enableSchemaValidation: false
  enableSubscriberVerification: false
  type: HTTP
  audiences:
   - all
  transport:
   - http
   - https
  tags:
   - pizza
  policies:
   - Unlimited
  organizationPolicies: []
  apiThrottlingPolicy: 50KPerMin
  authorizationHeader: Authorization
  apiKeyHeader: ApiKey
  securityScheme:
   - oauth_basic_auth_api_key_mandatory
   - oauth2
  visibility: PUBLIC
  visibleRoles: []
  visibleTenants: []
  visibleOrganizations:
   - none
  mediationPolicies: []
  subscriptionAvailability: CURRENT_TENANT
  subscriptionAvailableTenants: []
  additionalProperties: []
  additionalPropertiesMap: {}
  accessControl: NONE
  accessControlRoles: []
  businessInformation:
    businessOwner: Jane Roe
    businessOwnerEmail: marketing@pizzashack.com
    technicalOwner: John Doe
    technicalOwnerEmail: architecture@pizzashack.com
  corsConfiguration:
    corsConfigurationEnabled: false
    accessControlAllowOrigins:
     - '*'
    accessControlAllowCredentials: false
    accessControlAllowHeaders:
     - authorization
     - Access-Control-Allow-Origin
     - Content-Type
     - SOAPAction
     - apikey
     - Internal-Key
    accessControlAllowMethods:
     - GET
     - PUT
     - POST
     - DELETE
     - PATCH
     - OPTIONS
  websubSubscriptionConfiguration:
    enable: false
    secret: ""
    signingAlgorithm: SHA1
    signatureHeader: x-hub-signature
  createdTime: "1745549829735"
  lastUpdatedTimestamp: "1745549829735"
  lastUpdatedTime: 2025-04-25 08:27:09.735
  endpointConfig:
    endpoint_type: http
    sandbox_endpoints:
      url: https://localhost:9443/am/sample/pizzashack/v1/api/
    production_endpoints:
      url: https://localhost:9443/am/sample/pizzashack/v1/api/
  endpointImplementationType: ENDPOINT
  subtypeConfiguration:
    subtype: DEFAULT
  scopes: []
  operations:
   -
    id: ""
    target: /order
    verb: POST
    authType: Application & Application User
    throttlingPolicy: Unlimited
    scopes: []
    usedProductIds: []
    operationPolicies:
      request:
       -
        policyName: addLogMessage
        policyVersion: v1
        policyType: common
        policyId: 813466c8-8b99-4f08-8672-b89acee03ff0
        parameters: {}
      response: []
      fault: []
   -
    id: ""
    target: /menu
    verb: GET
    authType: Application & Application User
    throttlingPolicy: Unlimited
    scopes: []
    usedProductIds: []
    operationPolicies:
      request:
       -
        policyName: addLogMessage
        policyVersion: v1
        policyType: common
        policyId: 813466c8-8b99-4f08-8672-b89acee03ff0
        parameters: {}
      response: []
      fault: []
   -
    id: ""
    target: "/order/{orderId}"
    verb: GET
    authType: Application & Application User
    throttlingPolicy: Unlimited
    scopes: []
    usedProductIds: []
    operationPolicies:
      request:
       -
        policyName: addLogMessage
        policyVersion: v1
        policyType: common
        policyId: 813466c8-8b99-4f08-8672-b89acee03ff0
        parameters: {}
      response: []
      fault: []
   -
    id: ""
    target: "/order/{orderId}"
    verb: PUT
    authType: Application & Application User
    throttlingPolicy: Unlimited
    scopes: []
    usedProductIds: []
    operationPolicies:
      request:
       -
        policyName: addLogMessage
        policyVersion: v1
        policyType: common
        policyId: 813466c8-8b99-4f08-8672-b89acee03ff0
        parameters: {}
      response: []
      fault: []
   -
    id: ""
    target: "/order/{orderId}"
    verb: DELETE
    authType: Application & Application User
    throttlingPolicy: Unlimited
    scopes: []
    usedProductIds: []
    operationPolicies:
      request:
       -
        policyName: addLogMessage
        policyVersion: v1
        policyType: common
        policyId: 813466c8-8b99-4f08-8672-b89acee03ff0
        parameters: {}
      response: []
      fault: []
  categories: []
  keyManagers:
   - all
  advertiseInfo:
    advertised: false
    apiOwner: admin
    vendor: WSO2
  gatewayVendor: wso2
  gatewayType: wso2/synapse
  asyncTransportProtocols: []
  egress: false
  organizationId: carbon.super
